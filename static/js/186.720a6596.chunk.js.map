{"version":3,"file":"static/js/186.720a6596.chunk.js","mappings":"sQAAA,IAAMA,EAAY,gCACZC,EAAU,mCAET,SAASC,IACd,IAAMC,EAAe,IAAIC,gBAAgB,CACvCC,QAASJ,IAEX,OAAOK,MAAM,GAAD,OAAIN,EAAJ,8BAAmCG,IAAgBI,MAC7D,SAAAC,GACE,IAAKA,EAASC,GAAI,MAAM,IAAIC,MAAMF,EAASG,QAC3C,OAAOH,EAASI,MACjB,GAEJ,CAEM,SAASC,EAAkBC,GAChC,IAAMX,EAAe,IAAIC,gBAAgB,CACvCC,QAASJ,EACTa,MAAAA,EACAC,SAAU,UAEZ,OAAOT,MAAM,GAAD,OAAIN,EAAJ,wBAA6BG,IAAgBI,MAAK,SAAAC,GAC5D,IAAKA,EAASC,GAAI,MAAM,IAAIC,MAAMF,EAASG,QAC3C,OAAOH,EAASI,MACjB,GACF,CAEM,SAASI,EAAmBC,GACjC,IAAMd,EAAe,IAAIC,gBAAgB,CACvCC,QAASJ,EACTc,SAAU,UAEZ,OAAOT,MAAM,GAAD,OAAIN,EAAJ,iBAAsBiB,EAAtB,YAAiCd,IAAgBI,MAC3D,SAAAC,GACE,IAAKA,EAASC,GAAI,MAAM,IAAIC,MAAMF,EAASG,QAC3C,OAAOH,EAASI,MACjB,GAEJ,CAEM,SAASM,EAAmBD,GACjC,IAAMd,EAAe,IAAIC,gBAAgB,CACvCC,QAASJ,EACTc,SAAU,UAEZ,OAAOT,MAAM,GAAD,OAAIN,EAAJ,iBAAsBiB,EAAtB,oBAAyCd,IAAgBI,MACnE,SAAAC,GACE,IAAKA,EAASC,GAAI,MAAM,IAAIC,MAAMF,EAASG,QAC3C,OAAOH,EAASI,MACjB,GAEJ,CAEM,SAASO,EAAmBF,GACjC,IAAMd,EAAe,IAAIC,gBAAgB,CACvCC,QAASJ,EACTc,SAAU,QACVK,KAAM,IAER,OAAOd,MAAM,GAAD,OAAIN,EAAJ,iBAAsBiB,EAAtB,oBAAyCd,IAAgBI,MACnE,SAAAC,GACE,IAAKA,EAASC,GAAI,MAAM,IAAIC,MAAMF,EAASG,QAC3C,OAAOH,EAASI,MACjB,GAEJ,C,mHC7Dc,SAASS,IACtB,IAAQC,GAAUC,EAAAA,EAAAA,MAAVD,MACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRR,EAAAA,EAAAA,IAAmBG,EAAMM,IAAIrB,MAAK,gBAAGsB,EAAH,EAAGA,QAAH,OAAiBH,EAAWG,EAA5B,GACnC,GAAE,CAACP,KAGF,wBACGG,EAAQK,OACPL,EAAQM,KAAI,YAA8B,IAA3BH,EAA0B,EAA1BA,GAAII,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,2BACE,wBAAKD,KACL,uBAAIC,MAFGL,EAKZ,KAED,yBACE,mDAKT,C","sources":["api/movies-api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["const FETCH_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '687f60735406ee0172c31461de2476ff';\n\nexport function fetchPopularMovies() {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  return fetch(`${FETCH_URL}trending/movie/day?${searchParams}`).then(\n    response => {\n      if (!response.ok) throw new Error(response.status);\n      return response.json();\n    }\n  );\n}\n\nexport function fetchSearchMovies(query) {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    query,\n    language: 'en-US',\n  });\n  return fetch(`${FETCH_URL}search/movie?${searchParams}`).then(response => {\n    if (!response.ok) throw new Error(response.status);\n    return response.json();\n  });\n}\n\nexport function fetchMoviesDetails(movieId) {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n  });\n  return fetch(`${FETCH_URL}movie/${movieId}?${searchParams}`).then(\n    response => {\n      if (!response.ok) throw new Error(response.status);\n      return response.json();\n    }\n  );\n}\n\nexport function fetchMoviesCredits(movieId) {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n  });\n  return fetch(`${FETCH_URL}movie/${movieId}/credits?${searchParams}`).then(\n    response => {\n      if (!response.ok) throw new Error(response.status);\n      return response.json();\n    }\n  );\n}\n\nexport function fetchMoviesReviews(movieId) {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  });\n  return fetch(`${FETCH_URL}movie/${movieId}/reviews?${searchParams}`).then(\n    response => {\n      if (!response.ok) throw new Error(response.status);\n      return response.json();\n    }\n  );\n}\n","import { fetchMoviesReviews } from 'api/movies-api';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function Reviews() {\n  const { state } = useLocation();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMoviesReviews(state.id).then(({ results }) => setReviews(results));\n  }, [state]);\n\n  return (\n    <ul>\n      {reviews.length ? (\n        reviews.map(({ id, author, content }) => {\n          return (\n            <li key={id}>\n              <h2>{author}</h2>\n              <p>{content}</p>\n            </li>\n          );\n        })\n      ) : (\n        <li>\n          <p>Not find any reviews</p>\n        </li>\n      )}\n    </ul>\n  );\n}\n"],"names":["FETCH_URL","API_KEY","fetchPopularMovies","searchParams","URLSearchParams","api_key","fetch","then","response","ok","Error","status","json","fetchSearchMovies","query","language","fetchMoviesDetails","movieId","fetchMoviesCredits","fetchMoviesReviews","page","Reviews","state","useLocation","useState","reviews","setReviews","useEffect","id","results","length","map","author","content"],"sourceRoot":""}