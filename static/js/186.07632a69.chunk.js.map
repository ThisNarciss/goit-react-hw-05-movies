{"version":3,"file":"static/js/186.07632a69.chunk.js","mappings":"sQAAA,IAAMA,EAAY,gCACZC,EAAU,mCACVC,EAAe,IAAIC,gBAAgB,CACvCC,QAASH,EACTI,SAAU,UAGL,SAASC,IACd,OAAOC,MAAM,GAAD,OAAIP,EAAJ,8BAAmCE,IAAgBM,MAC7D,SAAAC,GACE,IAAKA,EAASC,GAAI,MAAM,IAAIC,MAAMF,EAASG,QAC3C,OAAOH,EAASI,MACjB,GAEJ,CAEM,SAASC,EAAkBC,GAChC,IAAMC,EAA2B,IAAIb,gBAAgB,CACnDC,QAASH,EACTI,SAAU,QACVU,MAAAA,IAEF,OAAOR,MAAM,GAAD,OAAIP,EAAJ,wBAA6BgB,IAA4BR,MACnE,SAAAC,GACE,IAAKA,EAASC,GAAI,MAAM,IAAIC,MAAMF,EAASG,QAC3C,OAAOH,EAASI,MACjB,GAEJ,CAEM,SAASI,EAAmBC,GACjC,OAAOX,MAAM,GAAD,OAAIP,EAAJ,iBAAsBkB,EAAtB,YAAiChB,IAAgBM,MAC3D,SAAAC,GACE,IAAKA,EAASC,GAAI,MAAM,IAAIC,MAAMF,EAASG,QAC3C,OAAOH,EAASI,MACjB,GAEJ,CAEM,SAASM,EAAmBD,GACjC,OAAOX,MAAM,GAAD,OAAIP,EAAJ,iBAAsBkB,EAAtB,oBAAyChB,IAAgBM,MACnE,SAAAC,GACE,IAAKA,EAASC,GAAI,MAAM,IAAIC,MAAMF,EAASG,QAC3C,OAAOH,EAASI,MACjB,GAEJ,CAEM,SAASO,EAAmBF,GACjC,IAAMG,EAAsB,IAAIlB,gBAAgB,CAC9CC,QAASH,EACTI,SAAU,QACViB,KAAM,IAER,OAAOf,MAAM,GAAD,OACPP,EADO,iBACWkB,EADX,oBAC8BG,IACxCb,MAAK,SAAAC,GACL,IAAKA,EAASC,GAAI,MAAM,IAAIC,MAAMF,EAASG,QAC3C,OAAOH,EAASI,MACjB,GACF,C,mHCxDc,SAASU,IACtB,IAAQC,GAAUC,EAAAA,EAAAA,MAAVD,MACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRT,EAAAA,EAAAA,IAAmBI,EAAMM,IAAItB,MAAK,gBAAGuB,EAAH,EAAGA,QAAH,OAAiBH,EAAWG,EAA5B,GACnC,GAAE,CAACP,KAGF,wBACGG,EAAQK,OACPL,EAAQM,KAAI,YAA8B,IAA3BH,EAA0B,EAA1BA,GAAII,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,2BACE,wBAAKD,KACL,uBAAIC,MAFGL,EAKZ,KAED,yBACE,cACEM,MAAO,CACLC,OAAQ,gBACRC,MAAO,MACPC,QAAS,aAJb,yDAaT,C","sources":["api/movies-api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["const FETCH_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '687f60735406ee0172c31461de2476ff';\nconst searchParams = new URLSearchParams({\n  api_key: API_KEY,\n  language: 'en-US',\n});\n\nexport function fetchPopularMovies() {\n  return fetch(`${FETCH_URL}trending/movie/day?${searchParams}`).then(\n    response => {\n      if (!response.ok) throw new Error(response.status);\n      return response.json();\n    }\n  );\n}\n\nexport function fetchSearchMovies(query) {\n  const searchParamsSearchMovies = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    query,\n  });\n  return fetch(`${FETCH_URL}search/movie?${searchParamsSearchMovies}`).then(\n    response => {\n      if (!response.ok) throw new Error(response.status);\n      return response.json();\n    }\n  );\n}\n\nexport function fetchMoviesDetails(movieId) {\n  return fetch(`${FETCH_URL}movie/${movieId}?${searchParams}`).then(\n    response => {\n      if (!response.ok) throw new Error(response.status);\n      return response.json();\n    }\n  );\n}\n\nexport function fetchMoviesCredits(movieId) {\n  return fetch(`${FETCH_URL}movie/${movieId}/credits?${searchParams}`).then(\n    response => {\n      if (!response.ok) throw new Error(response.status);\n      return response.json();\n    }\n  );\n}\n\nexport function fetchMoviesReviews(movieId) {\n  const searchParamsReviews = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  });\n  return fetch(\n    `${FETCH_URL}movie/${movieId}/reviews?${searchParamsReviews}`\n  ).then(response => {\n    if (!response.ok) throw new Error(response.status);\n    return response.json();\n  });\n}\n","import { fetchMoviesReviews } from 'api/movies-api';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function Reviews() {\n  const { state } = useLocation();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMoviesReviews(state.id).then(({ results }) => setReviews(results));\n  }, [state]);\n\n  return (\n    <ul>\n      {reviews.length ? (\n        reviews.map(({ id, author, content }) => {\n          return (\n            <li key={id}>\n              <h2>{author}</h2>\n              <p>{content}</p>\n            </li>\n          );\n        })\n      ) : (\n        <li>\n          <p\n            style={{\n              border: '1px solid red',\n              color: 'red',\n              padding: '10px 25px',\n            }}\n          >\n            We don't have any reviews for this movie\n          </p>\n        </li>\n      )}\n    </ul>\n  );\n}\n"],"names":["FETCH_URL","API_KEY","searchParams","URLSearchParams","api_key","language","fetchPopularMovies","fetch","then","response","ok","Error","status","json","fetchSearchMovies","query","searchParamsSearchMovies","fetchMoviesDetails","movieId","fetchMoviesCredits","fetchMoviesReviews","searchParamsReviews","page","Reviews","state","useLocation","useState","reviews","setReviews","useEffect","id","results","length","map","author","content","style","border","color","padding"],"sourceRoot":""}