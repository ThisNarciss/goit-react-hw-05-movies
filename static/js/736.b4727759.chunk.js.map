{"version":3,"file":"static/js/736.b4727759.chunk.js","mappings":"sQAAA,IAAMA,EAAY,gCACZC,EAAU,mCACVC,EAAe,IAAIC,gBAAgB,CACvCC,QAASH,EACTI,SAAU,UAGL,SAASC,IACd,OAAOC,MAAM,GAAD,OAAIP,EAAJ,8BAAmCE,IAAgBM,MAC7D,SAAAC,GACE,IAAKA,EAASC,GAAI,MAAM,IAAIC,MAAMF,EAASG,QAC3C,OAAOH,EAASI,MACjB,GAEJ,CAEM,SAASC,EAAkBC,EAAOC,GACvC,IAAMC,EAA2B,IAAId,gBAAgB,CACnDC,QAASH,EACTI,SAAU,QACVU,MAAAA,IAEF,OAAOR,MAAM,GAAD,OAAIP,EAAJ,wBAA6BiB,GAA4B,CACnED,OAAAA,IACCR,MAAK,SAAAC,GACN,IAAKA,EAASC,GAAI,MAAM,IAAIC,MAAMF,EAASG,QAC3C,OAAOH,EAASI,MACjB,GACF,CAEM,SAASK,EAAmBC,GACjC,OAAOZ,MAAM,GAAD,OAAIP,EAAJ,iBAAsBmB,EAAtB,YAAiCjB,IAAgBM,MAC3D,SAAAC,GACE,IAAKA,EAASC,GAAI,MAAM,IAAIC,MAAMF,EAASG,QAC3C,OAAOH,EAASI,MACjB,GAEJ,CAEM,SAASO,EAAmBD,GACjC,OAAOZ,MAAM,GAAD,OAAIP,EAAJ,iBAAsBmB,EAAtB,oBAAyCjB,IAAgBM,MACnE,SAAAC,GACE,IAAKA,EAASC,GAAI,MAAM,IAAIC,MAAMF,EAASG,QAC3C,OAAOH,EAASI,MACjB,GAEJ,CAEM,SAASQ,EAAmBF,GACjC,IAAMG,EAAsB,IAAInB,gBAAgB,CAC9CC,QAASH,EACTI,SAAU,QACVkB,KAAM,IAER,OAAOhB,MAAM,GAAD,OACPP,EADO,iBACWmB,EADX,oBAC8BG,IACxCd,MAAK,SAAAC,GACL,IAAKA,EAASC,GAAI,MAAM,IAAIC,MAAMF,EAASG,QAC3C,OAAOH,EAASI,MACjB,GACF,C,oIC1DYW,EAAWC,EAAAA,GAAAA,GAAH,yGAQRC,EAAWD,EAAAA,GAAAA,GAAH,gHAQRE,EAAYF,EAAAA,GAAAA,GAAH,0FAMTG,EAAWH,EAAAA,GAAAA,EAAH,mE,SCjBN,SAASI,IACtB,IAAQC,GAAUC,EAAAA,EAAAA,MAAVD,MACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRf,EAAAA,EAAAA,IAAmBU,EAAMM,IAAI5B,MAAK,gBAAG6B,EAAH,EAAGA,KAAH,OAAcH,EAAUG,EAAxB,GACnC,GAAE,CAACP,KAGF,SAACN,EAAD,UACGS,EAAOK,KAAI,YAA4C,IAAzCF,EAAwC,EAAxCA,GAAIG,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAClC,OACE,UAACf,EAAD,YACE,gBACEgB,IACED,EAAY,0CAC2BA,GAlBnC,gDAqBNE,IAAKH,EACLI,MAAM,SAER,SAACjB,EAAD,UAAYa,KACZ,SAACZ,EAAD,UAAWW,MAXEH,EAclB,KAGN,C","sources":["api/movies-api.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["const FETCH_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '687f60735406ee0172c31461de2476ff';\nconst searchParams = new URLSearchParams({\n  api_key: API_KEY,\n  language: 'en-US',\n});\n\nexport function fetchPopularMovies() {\n  return fetch(`${FETCH_URL}trending/movie/day?${searchParams}`).then(\n    response => {\n      if (!response.ok) throw new Error(response.status);\n      return response.json();\n    }\n  );\n}\n\nexport function fetchSearchMovies(query, signal) {\n  const searchParamsSearchMovies = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    query,\n  });\n  return fetch(`${FETCH_URL}search/movie?${searchParamsSearchMovies}`, {\n    signal,\n  }).then(response => {\n    if (!response.ok) throw new Error(response.status);\n    return response.json();\n  });\n}\n\nexport function fetchMoviesDetails(movieId) {\n  return fetch(`${FETCH_URL}movie/${movieId}?${searchParams}`).then(\n    response => {\n      if (!response.ok) throw new Error(response.status);\n      return response.json();\n    }\n  );\n}\n\nexport function fetchMoviesCredits(movieId) {\n  return fetch(`${FETCH_URL}movie/${movieId}/credits?${searchParams}`).then(\n    response => {\n      if (!response.ok) throw new Error(response.status);\n      return response.json();\n    }\n  );\n}\n\nexport function fetchMoviesReviews(movieId) {\n  const searchParamsReviews = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  });\n  return fetch(\n    `${FETCH_URL}movie/${movieId}/reviews?${searchParamsReviews}`\n  ).then(response => {\n    if (!response.ok) throw new Error(response.status);\n    return response.json();\n  });\n}\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  justify-content: center;\n\n  flex-wrap: wrap;\n  gap: 5px;\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  width: 100px;\n`;\n\nexport const CastLabel = styled.h2`\n  font-size: 14px;\n  text-align: center;\n  margin-bottom: 5px;\n`;\n\nexport const CastText = styled.p`\n  font-size: 10px;\n  text-align: center;\n`;\n","import { fetchMoviesCredits } from 'api/movies-api';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { CastItem, CastLabel, CastList, CastText } from './Cast.styled';\n\nconst DEFAULT_IMG = 'https://dummyimage.com/100x150/949494/fff.jpg';\n\nexport default function Cast() {\n  const { state } = useLocation();\n  const [actors, setActors] = useState([]);\n\n  useEffect(() => {\n    fetchMoviesCredits(state.id).then(({ cast }) => setActors(cast));\n  }, [state]);\n\n  return (\n    <CastList>\n      {actors.map(({ id, character, name, profile_path }) => {\n        return (\n          <CastItem key={id}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  : DEFAULT_IMG\n              }\n              alt={name}\n              width=\"100\"\n            />\n            <CastLabel>{name}</CastLabel>\n            <CastText>{character}</CastText>\n          </CastItem>\n        );\n      })}\n    </CastList>\n  );\n}\n"],"names":["FETCH_URL","API_KEY","searchParams","URLSearchParams","api_key","language","fetchPopularMovies","fetch","then","response","ok","Error","status","json","fetchSearchMovies","query","signal","searchParamsSearchMovies","fetchMoviesDetails","movieId","fetchMoviesCredits","fetchMoviesReviews","searchParamsReviews","page","CastList","styled","CastItem","CastLabel","CastText","Cast","state","useLocation","useState","actors","setActors","useEffect","id","cast","map","character","name","profile_path","src","alt","width"],"sourceRoot":""}